require 'fastlane/action'
require_relative '../helper/summarize_xcresult_report_action_helper'

module Fastlane
  module Actions
    module SharedValues
      SUMMARIZE_XCRESULT_REPORT_JSON = :SUMMARIZE_XCRESULT_REPORT_JSON
      RAW_XCRESULT_REPORT_JSON = :RAW_XCRESULT_REPORT_JSON
    end

    class SummarizeXcresultReportAction < Action
      def self.run(params)
        report_json = Helper::SummarizeXcresultReportHelper.xcresult_report_json(params[:file])

        summarized_report = report_json["targets"].map do |target|
          {
            'target' => target["name"],
            'lineCoverage' => target["lineCoverage"]
          }
        end

        if summarized_report.count > 1
          summarized_report.unshift(
            {
              'target' => 'Total',
              'lineCoverage' => report_json["lineCoverage"]
            }
          )
        end

        Actions.lane_context[SharedValues::RAW_XCRESULT_REPORT_JSON] = report_json
        Actions.lane_context[SharedValues::SUMMARIZE_XCRESULT_REPORT_JSON] = summarized_report

        summarized_report
      end

      #####################################################
      # @!group Documentation
      #####################################################

      def self.description
        "Summarize about test coverage rate from `.xcresult` file"
      end

      def self.details
        "Summarize about test coverage rate from `.xcresult` file"
      end

      def self.available_options
        [
          FastlaneCore::ConfigItem.new(key: :file,
                                       env_name: "FL_SUMMARIZE_XCRESULT_REPORT_FILE",
                                       description: "`.xcresult` file to operate on",
                                       type: String,
                                       optional: false,
                                       verify_block: proc do |value|
                                         UI.user_error!("Please specify an extension of .xcresult") unless File.extname(value) == '.xcresult'
                                       end)
        ]
      end

      def self.output
        [
          ['SUMMARIZE_XCRESULT_REPORT_JSON', 'The report summarizing from generated JSON by xccov'],
          ['RAW_XCRESULT_REPORT_JSON', 'The report as raw JSON generated by xccov']
        ]
      end

      def self.return_value
        "An array including the Target name (:target) and the Line Coverage Rate (:lineCoverage)."
      end

      def self.authors
        ["yutailang0119"]
      end

      def self.is_supported?(platform)
        [:ios, :mac].include?(platform)
      end
    end
  end
end
